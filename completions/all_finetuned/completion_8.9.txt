 from sklearn.datasets import fetch_mldata

mnist = fetch_mldata("MNIST original")
X_train_orig, y_train_orig = mnist["data"][:60000], mnist["target"][:60000]
X_test, y_test = mnist["data"][60000:], mnist["target"][60000:]
X_train_reduced, y_train_reduced = pca.transform(X_train_orig), y_train_orig
X_test_reduced, y_test_reduced = pca.transform(X_test), y_test

rnd_forest = RandomForestClassifier(n_estimators=100, random_state=42)
rnd_forest.fit(X_train_reduced, y_train_reduced)

rnd_forest.score(X_test_reduced, y_test_reduced)

rnd_forest.set_params(n_estimators=150, random_state=43)
rnd_forest.fit(X_train_reduced, y_train_reduced)

rnd_forest.score(X_test_reduced, y_test_reduced)

from sklearn.metrics import accuracy_score

y_pred = rnd_forest.predict(X_test)
accuracy_score(y_test, y_pred