

import numpy as np

from keras.models import Sequential

from keras.layers import Dense, Activation, LSTM, Conv1D, MaxPooling1D

from keras.utils import to_categorical

# Load the data

data = np.load('jsb_chorales.npz')

X = data['X']

Y = data['Y']

# One-hot encode the output

Y = to_categorical(Y)

# Create the model

model = Sequential()

model.add(LSTM(128, input_shape=(X.shape[1], X.shape[2])))

model.add(Dense(Y.shape[1], activation='softmax'))

# Compile the model

model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])

# Fit the model

model.fit(X, Y, epochs=10, batch_size=32)

# Generate Bach-like music

sequence_length = 100

notes = np.array([0, 0, 0, 0])

for i in range(sequence_length):

prediction = model.predict(notes.reshape(1, notes.shape[0], notes.shape[1]))

index = np.argmax(prediction)

notes = np.append(notes, index)

notes = notes[1:]

print(notes)