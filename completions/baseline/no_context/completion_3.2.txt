

def shift_image(image, dx, dy):

image = np.roll(image, shift=dy, axis=0)

image = np.roll(image, shift=dx, axis=1)

return image

X_train_augmented = [image for image in X_train]
y_train_augmented = [label for label in y_train]

for dx, dy in ((1, 0), (-1, 0), (0, 1), (0, -1)):

for image, label in zip(X_train, y_train):

shifted_image = shift_image(image, dx, dy)

X_train_augmented.append(shifted_image)

y_train_augmented.append(label)

X_train_augmented = np.array(X_train_augmented)

y_train_augmented = np.array(y_train_augmented)

knn_clf = KNeighborsClassifier(**grid_search.best_params_)

knn_clf.fit(X_train_augmented, y_train_augmented)

y_pred = knn_clf.predict(X_test)

accuracy_score(y_test, y_pred)